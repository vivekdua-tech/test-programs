{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 SFMono-Regular;
}
{\colortbl;\red255\green255\blue255;\red53\green53\blue53;\red49\green49\blue49;\red255\green255\blue255;
\red29\green38\blue42;\red245\green247\blue249;\red151\green0\blue126;\red20\green0\blue196;}
{\*\expandedcolortbl;;\cssrgb\c27059\c27059\c27059;\cssrgb\c25098\c25098\c25098;\cssrgb\c100000\c100000\c100000;
\cssrgb\c14902\c19608\c21961;\cssrgb\c96863\c97647\c98039;\cssrgb\c66667\c5098\c56863;\cssrgb\c10980\c0\c81176;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab560
\pard\pardeftab560\slleading20\partightenfactor0

\f0\fs24 \cf2 \
\
\
1. LCA 2. BST to Double link list 3. Sum of two link list integer\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 Tell me about the time when...style leadership questions. Expect to spend 2/3rds of each interview answering these questions, then 1/3rd whiteboarding.\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 Questions related to binary search tree, Graph\
\
Why amazon?\
\
There is significant emphasis placed on phrasing answers using the STAR method. Each interviewer will ask 2-3 specific questions that directly relate to Amazon\'92s leadership principles. Practice the STAR method beforehand, and make sure all steps/actions reflect positively on you - even if the final outcome was negative.\
\
create only one sorted list of k sorted list\
\
1. Amazon Locker 2. Jump Game 3. Design a voting system 4. Design a fake filter system\
\
Design elevator system. Implement connect-4\
\
Amazon does behavioral interviewing, with STAR (Situation, Task, Actions, Results): Describe a situation where you succeeded wildly/you missed a deadline/you failed catastrophically. What did you do? What were the results? What did you learn?\
\
Given an array of stock prices for n days, find purchase and sell day which maximize the profit.\
\
public static long getMaxProfit(int[] prices) \{\
        long profit = 0L;\
        int maxSoFar = 0;\
        for (int i = prices.length - 1; i > -1 ; i--) \{\
            if (prices[i] >= maxSoFar) \{\
                maxSoFar = prices[i];\
            \}\
            profit += maxSoFar - prices[i];\
        \}\
        return profit;\
    \}\
    \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 SDE2 : All three coding questions revolved around Graph\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 SDE2 : Number of islands\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 SDE2 : pow(x,y) where y is very large\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 A function returns lists of Flights departing from each city after a given time. Given a departure airport and arrival airport and a given time,return list all the Flight routes that can be used to reach the destination. Flight \{String dep:, String arr:, int depTime: , int arrTime: \}\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 Evaluation of an Expression using bfs or dfs\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 Logic to show top ranked products\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 Number of island variation\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 From a book (string of words, space delimited), and a list of words to omit (vector), return a list (vector) of the most frequent words in the book, excluding the words in the list of words to omit.\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 Find islands of 1s and 0s.\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 Typical data structures/ algos/ OOP, but you *must* prepare for their behavioral questions (your recruiter will tell you as much). Tailor all your responses to address their leadership principles, and you'll be good.\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 All questions were tree related. Forget what the recruiter sends - leet code, leadership principles and trees.\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 Two design and two algorithm questions (Binary Tree, HashTable, LinkedList, etc).\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 Dynamic programming: \
Given list of bag, each bag has its weight and value. You have a maximum weight to carry. Find the bag that are the most valuable and the sum of weight should be lower than your limit.\
\
\
\
Arista Questions\
===============\
\
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs30 \cf3 \cb4 \expnd0\expndtw0\kerning0
Design an iterator class with pointers to an array. \'a0\
\
What happens when you use std::cout on the address or value of a char ptr? \'a0\
\
Basic questions on how and where variables and resources are stored and managed for a process. \'a0\
\
Find missing numbers in a sorted array, like [1,2,3,4,6,7,8] you should output 5, all integers, consecutive and non-negative. \'a0Very common\

\f0\fs24 \cf2 \cb1 \kerning1\expnd0\expndtw0 \

\f1\fs30 \cf3 \cb4 \expnd0\expndtw0\kerning0
Given a node in a BST, find the next greater element.\
\
How to implement stack\
\
Allocate memory for a 2d array with only one malloc\
\
Use C to implement C++ class inheritance and virtual function\
\
Implement a trie data structure with insert, delete and lookup function. Write the code in the vim editor on the terminal. The programming language must be C.\
\
Print out the Fibonacci number << recursion and without >>\
\
print reverse strings, padding and pack \'a0\
\
Solve a Sudoku and the questions that posted by other people\'a0\
\
find the number of non-duplicate multiples\
\'a0of this numbers within that range. \'a0\
\
Somewhat clever bit manipulation problems. \'a0\
\
You had to ssh into their server and write code in C.\
\
BST :: FinddMin, and FindNext, and print in-order using the FindMin and FindNext.\
2. Find a missing element in a sorted array of contiguous integers. \'a0\
\
Difference between const int * and int * cons\
\
Given a linked list and a target value, delete all nodes with that target value in the list.\
\
Look at and understand 2 bit manipulation functions, which one is faster, use gettimeofday to time the functions.\
\
\
The problems are almost the same as what others have posted here, but to answer them well, you'll have to be very familiar with C (yes, C not C++), command-line debugging, man page, and working with editors like Vim or Emacs.\
\
a lot of bit manipulation and pointer related questions. gdb is helpful, vim/emacs is required\
\
Difference between char[] and char*\
\
Knowing the difference between a virtual function and normal function in a class in C++\
\
Write a program in C that can compare two strings that represent version numbers (1.1.02 compared to 1.1.3)\
\
\
\pard\pardeftab720\sl416\partightenfactor0

\f2\fs26 \cf5 \cb6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 Given the two \cf7 \strokec7 array\cf5 \strokec5  (A,B) Sort them in single \cf7 \strokec7 array\cf5 \strokec5  based on the index in \cf8 \strokec8 0\cf5 \strokec5 (N). Hint : \cf7 \strokec7 use\cf5 \strokec5  2 \cf8 \strokec8 pointer\cf5 \strokec5 \
\
2. \cf8 \strokec8 Knapsack\cf5 \strokec5  \cf8 \strokec8 problem\cf5 \strokec5  \cf8 \strokec8 with\cf5 \strokec5  \{\cf8 \strokec8 constraint\cf5 \strokec5  \cf8 \strokec8 n\cf5 \strokec5 <=40 \cf8 \strokec8 and\cf5 \strokec5  \cf8 \strokec8 total\cf5 \strokec5  \cf8 \strokec8 weight\cf5 \strokec5  <= 10^9\} \cf8 \strokec8 Hint\cf5 \strokec5  : \cf8 \strokec8 DP\cf5 \strokec5  \cf8 \strokec8 won\cf5 \strokec5 '\cf8 \strokec8 t\cf5 \strokec5  \cf8 \strokec8 work\cf5 \strokec5  \
\
3. \cf8 \strokec8 Peak\cf5 \strokec5  \cf8 \strokec8 and\cf5 \strokec5  \cf8 \strokec8 trough\cf5 \strokec5  \cf8 \strokec8 in\cf5 \strokec5  \cf8 \strokec8 the\cf5 \strokec5  \cf8 \strokec8 array\cf5 \strokec5  , \cf8 \strokec8 sum\cf5 \strokec5  \cf8 \strokec8 all\cf5 \strokec5  \cf8 \strokec8 the\cf5 \strokec5  \cf8 \strokec8 element\cf5 \strokec5  \cf8 \strokec8 which\cf5 \strokec5  \cf8 \strokec8 is\cf5 \strokec5  \cf8 \strokec8 above\cf5 \strokec5  \cf8 \strokec8 given\cf5 \strokec5  \cf8 \strokec8 threshold\cf5 \strokec5  \cf8 \strokec8 values\cf5 \strokec5 .\
\
4. \cf8 \strokec8 You\cf5 \strokec5  \cf8 \strokec8 are\cf5 \strokec5  \cf8 \strokec8 given\cf5 \strokec5  \cf8 \strokec8 a\cf5 \strokec5  2\cf8 \strokec8 d\cf5 \strokec5  \cf8 \strokec8 matrix\cf5 \strokec5  \cf8 \strokec8 A\cf5 \strokec5  \cf8 \strokec8 of\cf5 \strokec5  \cf8 \strokec8 m\cf5 \strokec5  \cf8 \strokec8 rows\cf5 \strokec5  \cf8 \strokec8 and\cf5 \strokec5  \cf8 \strokec8 n\cf5 \strokec5  \cf8 \strokec8 colums\cf5 \strokec5  \cf8 \strokec8 and\cf5 \strokec5  \cf8 \strokec8 you\cf5 \strokec5  \cf8 \strokec8 have\cf5 \strokec5  \cf8 \strokec8 to\cf5 \strokec5  \cf8 \strokec8 generate\cf5 \strokec5  \cf8 \strokec8 a\cf5 \strokec5  \cf8 \strokec8 matrix\cf5 \strokec5  \cf8 \strokec8 B\cf5 \strokec5  \cf8 \strokec8 of\cf5 \strokec5  \cf8 \strokec8 same\cf5 \strokec5  \cf8 \strokec8 dimension\cf5 \strokec5  \cf8 \strokec8 but\cf5 \strokec5  \cf8 \strokec8 the\cf5 \strokec5  \cf8 \strokec8 elements\cf5 \strokec5  \cf8 \strokec8 must\cf5 \strokec5  \cf8 \strokec8 be\cf5 \strokec5  \cf8 \strokec8 a\cf5 \strokec5  \cf8 \strokec8 summation\cf5 \strokec5  \cf8 \strokec8 of\cf5 \strokec5  \cf8 \strokec8 all\cf5 \strokec5  \cf8 \strokec8 the\cf5 \strokec5  \cf8 \strokec8 previous\cf5 \strokec5  \cf8 \strokec8 elements\cf5 \strokec5  \cf8 \strokec8 upto\cf5 \strokec5  \cf8 \strokec8 now\cf5 \strokec5 .\
\
	\cf8 \strokec8 For\cf5 \strokec5  \cf8 \strokec8 example\cf5 \strokec5  \cf8 \strokec8 if\cf5 \strokec5  \cf8 \strokec8 A\cf5 \strokec5 =[\{1,2,3\},\{4,5,6\}],\
	\cf8 \strokec8 then\cf5 \strokec5  \cf8 \strokec8 B\cf5 \strokec5  =[\{1,3,6\},\{5,12,21\}]\
	\cf8 \strokec8 Explanation\cf5 \strokec5 : \cf8 \strokec8 A\cf5 \strokec5 (0,0)=\cf8 \strokec8 B\cf5 \strokec5 (0,0)\
	\cf8 \strokec8 B\cf5 \strokec5 (0,1)=\cf8 \strokec8 A\cf5 \strokec5 (0,0)+\cf8 \strokec8 A\cf5 \strokec5 (0,1)\
	\cf8 \strokec8 B\cf5 \strokec5 (0,2)=\cf8 \strokec8 A\cf5 \strokec5 (0,0)+\cf8 \strokec8 A\cf5 \strokec5 (0,1)+\cf8 \strokec8 A\cf5 \strokec5 (0,2)\
	\cf8 \strokec8 B\cf5 \strokec5 (1,0)=\cf8 \strokec8 A\cf5 \strokec5 (0,0)+\cf8 \strokec8 A\cf5 \strokec5 (1,0)\
	\cf8 \strokec8 B\cf5 \strokec5 (1,1)=\cf8 \strokec8 A\cf5 \strokec5 (0,0)+\cf8 \strokec8 A\cf5 \strokec5 (0,1)+\cf8 \strokec8 A\cf5 \strokec5 (1,0)+\cf8 \strokec8 A\cf5 \strokec5 (1,1)\
	\cf8 \strokec8 B\cf5 \strokec5 (1,2)=\cf8 \strokec8 A\cf5 \strokec5 (0,0)+\cf8 \strokec8 A\cf5 \strokec5 (0,1)+\cf8 \strokec8 A\cf5 \strokec5 (0,2)+\cf8 \strokec8 A\cf5 \strokec5 (1,0)+\cf8 \strokec8 A\cf5 \strokec5 (1,1)+\cf8 \strokec8 A\cf5 \strokec5 (1,2)\
\pard\pardeftab720\sl340\partightenfactor0

\f1\fs30 \cf3 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\
\pard\tx560\pardeftab720\sl340\partightenfactor0
\cf3 \
\pard\pardeftab720\sl340\partightenfactor0
\cf3 \

\f0\fs24 \cf2 \cb1 \kerning1\expnd0\expndtw0 \
}